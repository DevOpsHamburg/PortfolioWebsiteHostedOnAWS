AWSTemplateFormatVersion: "2010-09-09"
Description: Website Resources

Parameters:

  Service:
    Type: String
    Description: The name of the service

  HostedZoneId:
    Type: String
    Description: The hosted zone Id of an existing Amazon Route 53 hosted zone

  HostedZoneName:
    Type: String
    Description: The DNS name of an existing Amazon Route 53 hosted zone
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
    ConstraintDescription: must be a valid DNS zone name.

  CertificateArn:
    Type: String
    Description: ARN of the certificate to use for endpoint encryption

Mappings:
  Region2S3WebsiteSuffix:
    us-east-1:
      Suffix: .s3-website-us-east-1.amazonaws.com
    us-west-1:
      Suffix: .s3-website-us-west-1.amazonaws.com
    us-west-2:
      Suffix: .s3-website-us-west-2.amazonaws.com
    eu-west-1:
      Suffix: .s3-website-eu-west-1.amazonaws.com
    ap-northeast-1:
      Suffix: .s3-website-ap-northeast-1.amazonaws.com
    ap-northeast-2:
      Suffix: .s3-website-ap-northeast-2.amazonaws.com
    ap-southeast-1:
      Suffix: .s3-website-ap-southeast-1.amazonaws.com
    ap-southeast-2:
      Suffix: .s3-website-ap-southeast-2.amazonaws.com
    ap-south-1:
      Suffix: .s3-website-ap-south-1.amazonaws.com
    us-east-2:
      Suffix: .s3-website-us-east-2.amazonaws.com
    sa-east-1:
      Suffix: .s3-website-sa-east-1.amazonaws.com
    cn-north-1:
      Suffix: .s3-website.cn-north-1.amazonaws.com.cn
    eu-central-1:
      Suffix: .s3-website.eu-central-1.amazonaws.com

Resources:
  WebsiteLogsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: LogDeliveryWrite
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub "${Service}-logs-${AWS::AccountId}"
      VersioningConfiguration:
        Status: Suspended

  WebsiteBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: BucketOwnerFullControl
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub "${Service}-${AWS::AccountId}"
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 7
            Status: Enabled
      MetricsConfigurations:
        - Id: !Ref "Service"
      LoggingConfiguration:
        DestinationBucketName: !Ref WebsiteLogsBucket
      VersioningConfiguration:
        Status: Enabled
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html

  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref WebsiteBucket
                - /*
      Bucket: !Ref WebsiteBucket

  WebsiteCDN:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: CDN for S3-backed website
        Aliases:
        - !Ref 'HostedZoneName'
        Enabled: 'true'
        DefaultCacheBehavior:
          ForwardedValues:
            QueryString: 'true'
          TargetOriginId: only-origin
          ViewerProtocolPolicy: 'redirect-to-https'
        DefaultRootObject: index.html
        Origins:
        - CustomOriginConfig:
            HTTPPort: '80'
            HTTPSPort: '443'
            OriginProtocolPolicy: http-only
          DomainName: !Join ['', [!Ref 'WebsiteBucket', !FindInMap [Region2S3WebsiteSuffix,
                !Ref 'AWS::Region', Suffix]]]
          Id: only-origin
        ViewerCertificate:
          AcmCertificateArn: !Ref 'CertificateArn'
          SslSupportMethod: 'sni-only'

  WebsiteDNSName:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Join ['', [!Ref 'HostedZoneName', .]]
      Comment: Alias record to CloudFront distribution
      Name: !Join ['', [!Ref 'HostedZoneName', '.']]
      Type: A
      AliasTarget:
        DNSName: !Join ['', [!GetAtt [WebsiteCDN, DomainName], '.']]
        EvaluateTargetHealth: false  # Not possible for CloudFront targets
        HostedZoneId: 'Z2FDTNDATAQYW2'  # HostedZoneId of CloudFront

Outputs:
  WebsiteURL:
    Value: !GetAtt
      - WebsiteBucket
      - WebsiteURL
    Description: URL for website hosted on S3

  S3BucketSecureURL:
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - WebsiteBucket
          - DomainName
    Description: Name of S3 bucket to hold website content
